<!DOCTYPE html>
<html lang="it">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,400&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/js/bootstrap.min.js" integrity="sha384-aJ21OjlMXNL5UyIl/XNwTMqvzeRMZH2w8c5cRVpzpU8Y5bApTppSuUkhZXN0VxHd" crossorigin="anonymous"></script>
    <script src="https://kraaden.github.io/autocomplete/autocomplete.js"></script>

    <script src="public/library.js"></script>

    <link rel="stylesheet" type="text/css" href="public/trenode.css" />
    <link rel="shortcut icon" href="public/favicon.png" type="image/x-icon">
    <link rel="icon" href="public/favicon.png" type="image/x-icon">
    <link rel="apple-touch-icon" href="public/apple-touch-icon.png">
    <title>Trenode.js</title>
</head>

<body>
    <div class="navbar text-center primary-bg">
        <h1> <a href="/">Trenode.js</a> </h1>
        <p class="subtitle">Sicuramente meglio di Trenitalia!</p>
    </div>
    <div id='loading'>
        <h1 class="text-center">Caricamento...<br>
            <i class='fa fa-circle-o-notch fa-spin'></i>
        </h1>
    </div>
    <div id='jquery' style="display: none;">

    </div>
    <footer class='footer'>
        Open source project available on <b><a href="https://github.com/fratorgano/Trenode.js"
                target="_blank">GitHub</a></b> <br>
        Made by <b><a href="https://fratorgano.me" target="_blank">Francesco Torgano</a></b> Â© <span id="year"></span>
    </footer>
    <script>
        $(document).ready(function () {
            createTable();
            // auto refresh page after 60 seconds
            setInterval('createTable()', 60000);
        });
    </script>
    <script>
        function createTable() {
            http_request = new XMLHttpRequest();
            data_file = "dataAjax";
            http_request.onreadystatechange = function () {
                // When the request is complete
                if (http_request.readyState == 4) {
                    // Parse json data to js object
                    const treni = JSON.parse(http_request.responseText);
                    // Setting base structure of the div that will containt train status tables
                    $('#jquery').html(
                        '<div class="container" id="cont"><div class="table-responsive" id="treni"></div><div class="col-sm-6"><a class="back" href="/"><span class="fa fa-arrow-left"></span> Torna alla ricerca</a></div></div>'
                    );
                    // Creating a delay status and a table for each train and adding it to the jquery div
                    treni.forEach(treno => {
                        const h3 = document.createElement('h3');
                        const b = document.createElement('b');
                        const small = document.createElement('small')
                        b.innerHTML = treno.salita.toLowerCase().replace(/\b\w/gm, c => c.toUpperCase()) +
                            ' <span class="fa fa-arrow-right"></span> ' + treno.discesa.toLowerCase()
                            .replace(/\b\w/gm, c => c.toUpperCase());
                        h3.appendChild(b);
                        h3.innerHTML += ' (' + treno.compNumeroTreno + ')<br>';

                        // Handling time formatting and delay status
                        small.innerHTML += treno.oraUltimoRilevamento == undefined ? 'Non ancora partito' :
                            treno.ritardo === undefined ? '' : (treno.fermate[treno.fermate.length - 1]
                                .arrivoReale == undefined ? 'In ' : 'Arrivato in ') + (treno.ritardo == 0 ?
                                'orario' : ((treno.ritardo > 0 ? ('ritardo di ' + treno.ritardo) : (
                                    'anticipo di ' + (treno.ritardo * -1)))) + (Math.abs(treno.ritardo) ==
                                    1 ? ' minuto' : ' minuti'));
                        h3.appendChild(small);
                        h3.classList.add('mb');

                        // Creating table and table structure
                        const table = document.createElement('table');
                        table.classList.add('table');
                        const tbody = document.createElement('tbody');
                        var tr = document.createElement('tr');
                        var th = document.createElement('th');
                        th.innerText = 'Stazione';
                        tr.appendChild(th);
                        th = document.createElement('th');
                        th.innerText = 'Ora';
                        tr.appendChild(th);
                        th = document.createElement('th');
                        th.innerText = 'Ritardo';
                        tr.appendChild(th);
                        th = document.createElement('th');
                        th.innerText = 'Binario';
                        tr.appendChild(th);
                        tbody.appendChild(tr);
                        // Adding data to the table
                        treno.fermate.forEach(fermata => {
                            tr = document.createElement('tr');
                            var td = document.createElement('td');
                            // Formatting data to capitalize text
                            td.innerText = fermata.stazione.toLowerCase().replace(/\b\w/gm, c => c
                                .toUpperCase());
                            tr.appendChild(td);
                            td = document.createElement('td');
                            d = fermata.partenza_teorica == null ? new Date(fermata.programmata) :
                                new Date(fermata.partenza_teorica);
                            if (!fermata.programmata && !fermata.partenza_teorica) {
                                td.innerText = '- : -';
                            } else {
                                td.innerText = d.getHours() < 10 ? ('0' + d.getHours()) : d
                                    .getHours();
                                td.innerText += ":";
                                td.innerText += d.getMinutes() < 10 ? ('0' + d.getMinutes()) : d
                                    .getMinutes();
                                //td.innerText = d.getHours() + ':' + d.getMinutes()<10?('0'+d.getMinutes()):d.getMinutes();
                            }
                            tr.appendChild(td);
                            td = document.createElement('td');
                            td.innerText = (fermata.ritardo == undefined || (fermata.arrivoReale ==
                                undefined && fermata.partenzaReale == undefined)) ? '-' : (
                                fermata.ritardo == 0 ? '0' : fermata.ritardo > 0 ? ('+' +
                                    fermata.ritardo) : fermata.ritardo);
                            tr.appendChild(td);
                            td = document.createElement('td');
                            // Handling platform numbers based on the more accurate ones provided
                            td.innerText = fermata.binarioEffettivoPartenzaDescrizione ==
                                undefined ? (fermata.binarioProgrammatoPartenzaDescrizione ==
                                    undefined ? (fermata.binarioEffettivoArrivoDescrizione ==
                                        undefined ? (fermata.binarioProgrammatoArrivoDescrizione ==
                                            undefined ? '-' : fermata
                                            .binarioProgrammatoArrivoDescrizione) : fermata
                                        .binarioEffettivoArrivoDescrizione) : fermata
                                    .binarioProgrammatoPartenzaDescrizione) : fermata
                                .binarioEffettivoPartenzaDescrizione;
                            tr.appendChild(td);
                            tbody.appendChild(tr);
                        })

                        table.appendChild(tbody);
                        $('#treni').append(h3);
                        $('#treni').append(table);

                        
                        //Adding text to let the user know when the data was last updated
                        if (treno.stazioneUltimoRilevamento != null) {
                            var div = document.createElement('div');
                            div.classList.add('col-sm-6');
                            $('#treni').append(div);
                            var div = document.createElement('div');
                            const h6 = document.createElement('h6');
                            h6.classList.add('text-right');
                            h6.innerText = 'Ultimo rilevamento: ';
                            h6.innerText += treno.stazioneUltimoRilevamento.toLowerCase().replace(/\b\w/gm,
                                c => c.toUpperCase());
                            if (treno.oraUltimoRilevamento) {
                                var o = new Date(treno.oraUltimoRilevamento);
                                h6.innerText += " ";
                                h6.innerText += o.getHours();
                                h6.innerText += ":";
                                h6.innerText += o.getMinutes() < 10 ? ('0' + o.getMinutes()) : o.getMinutes();
                            }
                            
                            div.appendChild(h6);
                            div.classList.add('col-sm-6');
                            $('#treni').append(div);
                        }
                    })
                    // add last update time for the page 
                    var div = document.createElement('div');
                    div.classList.add('col-sm-6');
                    $('#treni').append(div);
                    var div = document.createElement('div');
                    const h6 = document.createElement('h6');
                    h6.classList.add('text-right');
                    h6.innerText = 'Ultimo aggiornamento: ';
                    var o = new Date()
                    h6.innerText += " ";
                    h6.innerText += o.getHours();
                    h6.innerText += ":";
                    h6.innerText += o.getMinutes() < 10 ? ('0' + o.getMinutes()) : o.getMinutes();
                    div.appendChild(h6);
                    div.classList.add('col-sm-6');
                    $('#treni').append(div);
                    // Hiding the loading div and showing the one with data.
                    $('#loading').css('display', 'none');
                    $('#jquery').css('display', 'inline');
                }
            }
            http_request.open("GET", data_file, true);
            http_request.send();
        }
    </script>
    <script>
        setYearToElementTextContent('year');
    </script>
</body>

</html>